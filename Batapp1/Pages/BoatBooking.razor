@page "/book"
@inject Batapp1.Service.BookingService BookingService
@using Microsoft.AspNetCore.Components.Forms

<PageTitle>Boka en båt</PageTitle>

<h2>Boka en båt</h2>

<div class="p-3">
    <label>Båt:</label>
    <select @bind="SelectedBoat" class="form-select">
        @foreach (var boat in Boats)
        {
            <option value="@boat">@boat</option>
        }
    </select>

    <br />

    <label>Datum:</label>
    <InputDate @bind-Value="SelectedDate" class="form-control" />

    <br />

    <label>Starttid:</label>
    <input type="time" value="@SelectedStartTimeString" @onchange="OnStartTimeChanged" class="form-control" />

    <br />

    <label>Sluttid:</label>
    <input type="time" value="@SelectedEndTimeString" @onchange="OnEndTimeChanged" class="form-control" />

    <br />

    <label>Ditt namn:</label>
    <InputText @bind-Value="BookedBy" class="form-control" />

    <br />

    <button class="btn btn-primary mt-2" @onclick="BookBoat">Boka</button>
</div>

@if (ErrorMessage is not null)
{
    <p style="color:red">@ErrorMessage</p>
}

<h3>Aktuella bokningar</h3>

<table class="table">
    <thead>
        <tr>
            <th>Båt</th>
            <th>Datum</th>
            <th>Starttid</th>
            <th>Sluttid</th>
            <th>Bokad av</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var booking in BookingService.GetBookings())
        {
            <tr>
                <td>@booking.BoatName</td>
                <td>@booking.BookingDate.ToShortDateString()</td>
                <td>@booking.StartTime</td>
                <td>@booking.EndTime</td>
                <td>@booking.BookedBy</td>
            </tr>
        }
    </tbody>
</table>

@code {
	private string SelectedBoat = "Båt 1"; //Ändra defaultvärdet till den båt som ska vara förvald?(Vanligaste båten?)
    private DateTime SelectedDate = DateTime.Today;
    private TimeSpan SelectedStartTime = new(12, 0, 0);
    private TimeSpan SelectedEndTime = new(14, 0, 0);
    private string BookedBy = string.Empty;
    private string? ErrorMessage;

	private List<string> Boats = new() { "Båt 1", "Båt 2", "Båt 3" }; //Ändra Båtnamnen till de riktiga namnen på båtarna(Lägga till fler båtar vid behov och kunna ändra namn)?)

    // För <input type="time">
    private string SelectedStartTimeString => SelectedStartTime.ToString(@"hh\:mm");
    private string SelectedEndTimeString => SelectedEndTime.ToString(@"hh\:mm");

    private void OnStartTimeChanged(ChangeEventArgs e)
    {
        if (TimeSpan.TryParse(e.Value?.ToString(), out var parsed))
            SelectedStartTime = parsed;
    }

    private void OnEndTimeChanged(ChangeEventArgs e)
    {
        if (TimeSpan.TryParse(e.Value?.ToString(), out var parsed))
            SelectedEndTime = parsed;
    }

	//Lägga till clearing av formulär efter bokning?
	//Lägga till bekräftelsemeddelande efter bokning?
	//Lägga till validering för att undvika dubbelbokning?
	//Lägga till så man kan ta bort bokningar?
	//Lägga till så man kan redigera bokningar?
	//Lägga till så listan ränsas efter en vecka efter bokningsdatumet har passerat?
	//Lägga till så att en admin kan se alla bokningar och ta bort/redigera dem?
	//Ändra bookedBy till att vara en dropdown med användarnamn istället för att skriva in sitt namn manuellt? (Behöver då lägga till användarhantering) Men för att undvika att folk skriver in fel namn.
	//Fixa bättre design på sidan?
	//Fixa så att man kan boka flera dagar i sträck?
	//Fixa så att utseendet på sidan är bättre på mobil?
	//Fixa så att utseendet på boka så det ser ut som en kalender som man bokar in direkt in i kalendern?

    private void BookBoat()
    {
        try
        {
            if (SelectedEndTime <= SelectedStartTime)
            {
                ErrorMessage = "Sluttiden måste vara senare än starttiden.";
                return;
            }

            var booking = new Batapp1.Models.BoatBooking
            {
                BoatName = SelectedBoat,
                BookingDate = SelectedDate,
                StartTime = SelectedStartTime,
                EndTime = SelectedEndTime,
                BookedBy = BookedBy
            };

            BookingService.AddBooking(booking);
            ErrorMessage = null;

            // Rensa formulär efter bokning
            BookedBy = string.Empty;
            SelectedStartTime = new(12, 0, 0);
            SelectedEndTime = new(14, 0, 0);
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
    }
}